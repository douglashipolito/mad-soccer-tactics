{"id":"../node_modules/stylus/lib/functions/match.js","dependencies":[{"name":"/Users/douglashipolito/Sites/mad-soccer/package.json","includedInParent":true,"mtime":1559260688352},{"name":"/Users/douglashipolito/Sites/mad-soccer/.babelrc","includedInParent":true,"mtime":1559259736018},{"name":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/package.json","includedInParent":true,"mtime":1559260686177},{"name":"../utils","loc":{"line":1,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/match.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/utils.js"},{"name":"../nodes","loc":{"line":2,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/match.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/nodes/index.js"}],"generated":{"js":"var utils = require('../utils')\n  , nodes = require('../nodes');\n\nvar VALID_FLAGS = 'igm';\n\n/**\n * retrieves the matches when matching a `val`(string)\n * against a `pattern`(regular expression).\n *\n * Examples:\n *   $regex = '^(height|width)?([<>=]{1,})(.*)'\n *\n *   match($regex,'height>=sm')\n * \t // => ('height>=sm' 'height' '>=' 'sm')\n * \t // => also truthy\n *\n *   match($regex, 'lorem ipsum')\n *   // => null\n *\n * @param {String} pattern\n * @param {String|Ident} val\n * @param {String|Ident} [flags='']\n * @return {String|Null}\n * @api public\n */\n\nmodule.exports = function match(pattern, val, flags){\n  utils.assertType(pattern, 'string', 'pattern');\n  utils.assertString(val, 'val');\n  var re = new RegExp(pattern.val, validateFlags(flags) ? flags.string : '');\n  return val.string.match(re);\n};\n\nfunction validateFlags(flags) {\n  flags = flags && flags.string;\n\n  if (flags) {\n    return flags.split('').every(function(flag) {\n      return ~VALID_FLAGS.indexOf(flag);\n    });\n  }\n  return false;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/stylus/lib/functions/match.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../node_modules/stylus/lib/functions/match.js":"var utils = require('../utils')\n  , nodes = require('../nodes');\n\nvar VALID_FLAGS = 'igm';\n\n/**\n * retrieves the matches when matching a `val`(string)\n * against a `pattern`(regular expression).\n *\n * Examples:\n *   $regex = '^(height|width)?([<>=]{1,})(.*)'\n *\n *   match($regex,'height>=sm')\n * \t // => ('height>=sm' 'height' '>=' 'sm')\n * \t // => also truthy\n *\n *   match($regex, 'lorem ipsum')\n *   // => null\n *\n * @param {String} pattern\n * @param {String|Ident} val\n * @param {String|Ident} [flags='']\n * @return {String|Null}\n * @api public\n */\n\nmodule.exports = function match(pattern, val, flags){\n  utils.assertType(pattern, 'string', 'pattern');\n  utils.assertString(val, 'val');\n  var re = new RegExp(pattern.val, validateFlags(flags) ? flags.string : '');\n  return val.string.match(re);\n};\n\nfunction validateFlags(flags) {\n  flags = flags && flags.string;\n\n  if (flags) {\n    return flags.split('').every(function(flag) {\n      return ~VALID_FLAGS.indexOf(flag);\n    });\n  }\n  return false;\n}\n"},"lineCount":44}},"error":null,"hash":"136a2bf64b90008f45638f62fae506e2","cacheData":{"env":{}}}