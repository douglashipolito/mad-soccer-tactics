{"id":"../node_modules/stylus/lib/functions/resolver.js","dependencies":[{"name":"/Users/douglashipolito/Sites/mad-soccer/package.json","includedInParent":true,"mtime":1559260688352},{"name":"/Users/douglashipolito/Sites/mad-soccer/.babelrc","includedInParent":true,"mtime":1559259736018},{"name":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/package.json","includedInParent":true,"mtime":1559260686177},{"name":"../visitor/compiler","loc":{"line":5,"column":23},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/resolver.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/visitor/compiler.js"},{"name":"../nodes","loc":{"line":6,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/resolver.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/nodes/index.js"},{"name":"url","loc":{"line":7,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/resolver.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/url/url.js"},{"name":"path","loc":{"line":12,"column":18},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/resolver.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/path-browserify/index.js"},{"name":"../utils","loc":{"line":59,"column":21},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/resolver.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/utils.js"}],"generated":{"js":"/**\n * Module dependencies.\n */\n\nvar Compiler = require('../visitor/compiler')\n  , nodes = require('../nodes')\n  , parse = require('url').parse\n  , relative = require('path').relative\n  , join = require('path').join\n  , dirname = require('path').dirname\n  , extname = require('path').extname\n  , sep = require('path').sep;\n\n/**\n * Return a url() function which resolves urls.\n *\n * Options:\n *\n *    - `paths` resolution path(s), merged with general lookup paths\n *    - `nocheck` don't check file existence\n *\n * Examples:\n *\n *    stylus(str)\n *      .set('filename', __dirname + '/css/test.styl')\n *      .define('url', stylus.resolver({ nocheck: true }))\n *      .render(function(err, css){ ... })\n *\n * @param {Object} [options]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(options) {\n  options = options || {};\n\n  function resolver(url) {\n    // Compile the url\n    var compiler = new Compiler(url)\n      , filename = url.filename;\n    compiler.isURL = true;\n    url = parse(url.nodes.map(function(node){\n      return compiler.visit(node);\n    }).join(''));\n\n    // Parse literal \n    var literal = new nodes.Literal('url(\"' + url.href + '\")')\n      , path = url.pathname\n      , dest = this.options.dest\n      , tail = ''\n      , res;\n\n    // Absolute or hash\n    if (url.protocol || !path || '/' == path[0]) return literal;\n\n    // Check that file exists\n    if (!options.nocheck) {\n      var _paths = options.paths || [];\n      path = require('../utils').lookup(path, _paths.concat(this.paths));\n      if (!path) return literal;\n    }\n\n    if (this.includeCSS && extname(path) == '.css')\n      return new nodes.Literal(url.href);\n\n    if (url.search) tail += url.search;\n    if (url.hash) tail += url.hash;\n\n    if (dest && extname(dest) == '.css')\n      dest = dirname(dest);\n\n    res = relative(dest || dirname(this.filename), options.nocheck\n      ? join(dirname(filename), path)\n      : path) + tail;\n\n    if ('\\\\' == sep) res = res.replace(/\\\\/g, '/');\n\n    return new nodes.Literal('url(\"' + res + '\")');\n  };\n\n  // Expose options to Evaluator\n  resolver.options = options;\n  resolver.raw = true;\n  return resolver;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/stylus/lib/functions/resolver.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../node_modules/stylus/lib/functions/resolver.js":"/**\n * Module dependencies.\n */\n\nvar Compiler = require('../visitor/compiler')\n  , nodes = require('../nodes')\n  , parse = require('url').parse\n  , relative = require('path').relative\n  , join = require('path').join\n  , dirname = require('path').dirname\n  , extname = require('path').extname\n  , sep = require('path').sep;\n\n/**\n * Return a url() function which resolves urls.\n *\n * Options:\n *\n *    - `paths` resolution path(s), merged with general lookup paths\n *    - `nocheck` don't check file existence\n *\n * Examples:\n *\n *    stylus(str)\n *      .set('filename', __dirname + '/css/test.styl')\n *      .define('url', stylus.resolver({ nocheck: true }))\n *      .render(function(err, css){ ... })\n *\n * @param {Object} [options]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(options) {\n  options = options || {};\n\n  function resolver(url) {\n    // Compile the url\n    var compiler = new Compiler(url)\n      , filename = url.filename;\n    compiler.isURL = true;\n    url = parse(url.nodes.map(function(node){\n      return compiler.visit(node);\n    }).join(''));\n\n    // Parse literal \n    var literal = new nodes.Literal('url(\"' + url.href + '\")')\n      , path = url.pathname\n      , dest = this.options.dest\n      , tail = ''\n      , res;\n\n    // Absolute or hash\n    if (url.protocol || !path || '/' == path[0]) return literal;\n\n    // Check that file exists\n    if (!options.nocheck) {\n      var _paths = options.paths || [];\n      path = require('../utils').lookup(path, _paths.concat(this.paths));\n      if (!path) return literal;\n    }\n\n    if (this.includeCSS && extname(path) == '.css')\n      return new nodes.Literal(url.href);\n\n    if (url.search) tail += url.search;\n    if (url.hash) tail += url.hash;\n\n    if (dest && extname(dest) == '.css')\n      dest = dirname(dest);\n\n    res = relative(dest || dirname(this.filename), options.nocheck\n      ? join(dirname(filename), path)\n      : path) + tail;\n\n    if ('\\\\' == sep) res = res.replace(/\\\\/g, '/');\n\n    return new nodes.Literal('url(\"' + res + '\")');\n  };\n\n  // Expose options to Evaluator\n  resolver.options = options;\n  resolver.raw = true;\n  return resolver;\n};\n"},"lineCount":86}},"error":null,"hash":"4a6581aa9a1509810da84ccf255d21aa","cacheData":{"env":{}}}