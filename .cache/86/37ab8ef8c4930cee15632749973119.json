{"id":"../node_modules/stylus/lib/functions/unit.js","dependencies":[{"name":"/Users/douglashipolito/Sites/mad-soccer/package.json","includedInParent":true,"mtime":1559260688352},{"name":"/Users/douglashipolito/Sites/mad-soccer/.babelrc","includedInParent":true,"mtime":1559259736018},{"name":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/package.json","includedInParent":true,"mtime":1559260686177},{"name":"../utils","loc":{"line":1,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/unit.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/utils.js"},{"name":"../nodes","loc":{"line":2,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/unit.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/nodes/index.js"}],"generated":{"js":"var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Assign `type` to the given `unit` or return `unit`'s type.\n *\n * @param {Unit} unit\n * @param {String|Ident} type\n * @return {Unit}\n * @api public\n */\n\nmodule.exports = function unit(unit, type){\n  utils.assertType(unit, 'unit', 'unit');\n\n  // Assign\n  if (type) {\n    utils.assertString(type, 'type');\n    return new nodes.Unit(unit.val, type.string);\n  } else {\n    return unit.type || '';\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/stylus/lib/functions/unit.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/stylus/lib/functions/unit.js":"var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Assign `type` to the given `unit` or return `unit`'s type.\n *\n * @param {Unit} unit\n * @param {String|Ident} type\n * @return {Unit}\n * @api public\n */\n\nmodule.exports = function unit(unit, type){\n  utils.assertType(unit, 'unit', 'unit');\n\n  // Assign\n  if (type) {\n    utils.assertString(type, 'type');\n    return new nodes.Unit(unit.val, type.string);\n  } else {\n    return unit.type || '';\n  }\n};\n"},"lineCount":24}},"error":null,"hash":"ae80a92b01bd5a90403cd973c779177b","cacheData":{"env":{}}}