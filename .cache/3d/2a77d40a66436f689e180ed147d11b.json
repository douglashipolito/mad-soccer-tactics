{"id":"../node_modules/stylus/lib/functions/add-property.js","dependencies":[{"name":"/Users/douglashipolito/Sites/mad-soccer/package.json","includedInParent":true,"mtime":1559260688352},{"name":"/Users/douglashipolito/Sites/mad-soccer/.babelrc","includedInParent":true,"mtime":1559259736018},{"name":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/package.json","includedInParent":true,"mtime":1559260686177},{"name":"../utils","loc":{"line":1,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/add-property.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/utils.js"},{"name":"../nodes","loc":{"line":2,"column":20},"parent":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/functions/add-property.js","resolved":"/Users/douglashipolito/Sites/mad-soccer/node_modules/stylus/lib/nodes/index.js"}],"generated":{"js":"var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Add property `name` with the given `expr`\n * to the mixin-able block.\n *\n * @param {String|Ident|Literal} name\n * @param {Expression} expr\n * @return {Property}\n * @api public\n */\n\n(module.exports = function addProperty(name, expr){\n  utils.assertType(name, 'expression', 'name');\n  name = utils.unwrap(name).first;\n  utils.assertString(name, 'name');\n  utils.assertType(expr, 'expression', 'expr');\n  var prop = new nodes.Property([name], expr);\n  var block = this.closestBlock;\n\n  var len = block.nodes.length\n    , head = block.nodes.slice(0, block.index)\n    , tail = block.nodes.slice(block.index++, len);\n  head.push(prop);\n  block.nodes = head.concat(tail);\n\n  return prop;\n}).raw = true;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/stylus/lib/functions/add-property.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/stylus/lib/functions/add-property.js":"var utils = require('../utils')\n  , nodes = require('../nodes');\n\n/**\n * Add property `name` with the given `expr`\n * to the mixin-able block.\n *\n * @param {String|Ident|Literal} name\n * @param {Expression} expr\n * @return {Property}\n * @api public\n */\n\n(module.exports = function addProperty(name, expr){\n  utils.assertType(name, 'expression', 'name');\n  name = utils.unwrap(name).first;\n  utils.assertString(name, 'name');\n  utils.assertType(expr, 'expression', 'expr');\n  var prop = new nodes.Property([name], expr);\n  var block = this.closestBlock;\n\n  var len = block.nodes.length\n    , head = block.nodes.slice(0, block.index)\n    , tail = block.nodes.slice(block.index++, len);\n  head.push(prop);\n  block.nodes = head.concat(tail);\n\n  return prop;\n}).raw = true;\n"},"lineCount":30}},"error":null,"hash":"c40cb6e26d373a881b86f702e840a82e","cacheData":{"env":{}}}